const config = {
  "ownerID": "id-here like 3343246564",

  "admins": "id-here",

  "support": "id-here",

  "token": "your-token",
  
  "mashapekey": "Mashape-API-Key",
  
  "youtube": "YouTube API",
  
  "cat": "Cat API",
  
  "IAPIToken": "TOP Secret ToKeN",

 
  
"defaultSettings" : {
    "prefix": "?",
    "modLogChannel": "mod-log",
    "modRole": "Moderator",
    "adminRole": "Administrator",
    "systemNotice": "true", 
    "welcomeChannel": "welcome",
    "welcomeMessage": "Hi !user, welcome to !server. Now we became !memberCount members! Feel free to browse around and get to know the others. If you have any questions, ask right away!",
    "WelcomeType": "image",
	"welcomeEnabled": "true",
	"leaveChannel": "welcome",
	"leaveMessage": "Goodbye !user, now this server has !memberCount members. Good Luck on whatever you do!",
    "leaveEnabled": "true",
	"announcementChannel": "announcement"
  },


  permLevels: [
    { level: 0,
      name: "User", 
      check: () => true
    },

    { level: 2,
      name: "Moderator",
      check: (message) => {
        try {
          const modRole = message.guild.roles.find(r => r.name.toLowerCase() === message.settings.modRole.toLowerCase());
          if (modRole && message.member.roles.has(modRole.id)) return true;
        } catch (e) {
          return false;
        }
      }
    },

    { level: 3,
      name: "Administrator", 
      check: (message) => {
        try {
          const adminRole = message.guild.roles.find(r => r.name.toLowerCase() === message.settings.adminRole.toLowerCase());
          return (adminRole && message.member.roles.has(adminRole.id));
        } catch (e) {
          return false;
        }
      }
    },
    { level: 4,
      name: "Server Owner", 
      check: (message) => message.channel.type === "text" ? (message.guild.ownerID === message.author.id ? true : false) : false
    },

    { level: 8,
      name: "Bot Support",
      check: (message) => config.support.includes(message.author.id)
    },

    { level: 9,
      name: "Bot Admin",
      check: (message) => config.admins.includes(message.author.id)
    },

    { level: 10,
      name: "Bot Owner", 
      check: (message) => message.client.config.ownerID === message.author.id
    }
  ]
};

module.exports = config;
